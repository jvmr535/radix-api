Resources:
  RadixBackendLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RadixBackendLambdaRole-${sls:stage}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: RadixBackendLambdaPolicy-${sls:stage}
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'dynamodb:GetItem'
                  - 'dynamodb:PutItem'
                  - 'dynamodb:UpdateItem'
                  - 'dynamodb:Scan'
                  - 'dynamodb:Query'
                  - 'dynamodb:BatchGetItem'
                  - 'dynamodb:BatchWriteItem'
                  - 'dynamodb:DeleteItem'
                Resource:
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:dynamodb:'
                        - Ref: AWS::Region
                        - ':'
                        - Ref: AWS::AccountId
                        - ':table/radix-sensors-data'
                  - Fn::Join:
                      - ''
                      - - 'arn:aws:dynamodb:'
                        - Ref: AWS::Region
                        - ':'
                        - Ref: AWS::AccountId
                        - ':table/radix-sensors-data/index/EquipmentId-Timestamp-Index'
              - Effect: Allow
                Action:
                  - 's3:*'
                Resource:
                  - arn:aws:s3:::${self:custom.serviceNamePrefix}
                  - arn:aws:s3:::${self:custom.serviceNamePrefix}/*
